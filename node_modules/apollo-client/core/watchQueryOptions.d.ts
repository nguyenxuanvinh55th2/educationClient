/// <reference types="typed-graphql" />
/// <reference types="chai" />
import { Document, FragmentDefinition } from 'graphql';
import { OperationResultReducer } from '../data/mutationResults';
export interface ModifiableWatchQueryOptions {
    variables?: {
        [key: string]: any;
    };
    forceFetch?: boolean;
    returnPartialData?: boolean;
    noFetch?: boolean;
    pollInterval?: number;
    notifyOnNetworkStatusChange?: boolean;
    reducer?: OperationResultReducer;
}
export interface WatchQueryOptions extends ModifiableWatchQueryOptions {
    query: Document;
}
export interface DeprecatedWatchQueryOptions extends ModifiableWatchQueryOptions {
    query: Document;
    fragments?: FragmentDefinition[];
}
export interface FetchMoreQueryOptions {
    query?: Document;
    variables?: {
        [key: string]: any;
    };
    fragments?: FragmentDefinition[];
}
export declare type SubscribeToMoreOptions = {
    document: Document;
    variables?: {
        [key: string]: any;
    };
    updateQuery: (previousQueryResult: Object, options: {
        subscriptionData: {
            data: any;
        };
        variables: {
            [key: string]: any;
        };
    }) => Object;
};
export interface DeprecatedSubscriptionOptions {
    query: Document;
    variables?: {
        [key: string]: any;
    };
    fragments?: FragmentDefinition[];
}
