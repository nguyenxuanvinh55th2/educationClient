/// <reference types="@types/node" />
export interface SubscriptionOptions {
    query: string;
    variables?: Object;
    operationName?: string;
    context?: any;
}
export interface Subscription {
    options: SubscriptionOptions;
    handler: (error: Error[], result?: any) => void;
}
export interface Subscriptions {
    [id: string]: Subscription;
}
export interface ClientOptions {
    timeout?: number;
    reconnect?: boolean;
    reconnectionAttempts?: number;
}
export default class Client {
    client: any;
    subscriptions: Subscriptions;
    private url;
    private maxId;
    private subscriptionTimeout;
    private waitingSubscriptions;
    private unsentMessagesQueue;
    private reconnect;
    private reconnecting;
    private reconnectionAttempts;
    private reconnectSubscriptions;
    private backoff;
    constructor(url: string, options?: ClientOptions);
    subscribe(options: SubscriptionOptions, handler: (error: Error[], result?: any) => void): number;
    unsubscribe(id: number): void;
    unsubscribeAll(): void;
    private sendMessage(message);
    private generateSubscriptionId();
    private formatErrors(errors);
    private tryReconnect();
    private connect();
}
