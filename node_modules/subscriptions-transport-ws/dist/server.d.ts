/// <reference types="@types/node" />
import { SubscriptionManager } from 'graphql-subscriptions';
import { Server as HttpServer } from 'http';
export interface SubscribeMessage {
    [key: string]: any;
    query?: string;
    variables?: {
        [key: string]: any;
    };
    operationName?: string;
    id: string;
    type: string;
}
export interface ServerOptions {
    subscriptionManager: SubscriptionManager;
    onSubscribe?: Function;
    keepAlive?: number;
}
declare class Server {
    private onSubscribe;
    private wsServer;
    private subscriptionManager;
    constructor(options: ServerOptions, httpServer: HttpServer);
    private onClose(connection, connectionSubscriptions);
    private onMessage(connection, connectionSubscriptions, webSocketRequest);
    private sendSubscriptionData(connection, subId, payload);
    private sendSubscriptionFail(connection, subId, payload);
    private sendSubscriptionSuccess(connection, subId);
    private sendKeepAlive(connection);
}
export default Server;
